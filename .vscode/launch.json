{
    // Use IntelliSense to learn about possible attributes.
    // Hover to view descriptions of existing attributes.
    // For more information, visit: https://go.microsoft.com/fwlink/?linkid=830387
    "version": "0.2.0",
    "configurations": [
        {
            "name": "Python: Current File",
            "type": "python",
            "request": "launch",
            "program": "${file}",
            "console": "integratedTerminal",
            "justMyCode": true
        },
        {
            "name": "write_out 5.py",
            "type": "python",
            "request": "launch",
            "program": "write_out copy.py",
            "console": "integratedTerminal",
            "justMyCode": false,
            "args": [
                "--tasks",
                "all_tasks",
                "--num_fewshot",
                "5",
                "--num_examples",
                "10",
                "--output_base_path",
                "../input_examples"
            ],
            "cwd": "${workspaceFolder}/scripts"
        },
        {
            "name": "write_out 0.py",
            "type": "python",
            "request": "launch",
            "program": "write_out copy.py",
            "console": "integratedTerminal",
            "justMyCode": false,
            "args": [
                "--tasks",
                "all_tasks",
                "--num_fewshot",
                "0",
                "--num_examples",
                "10",
                "--output_base_path",
                "../input_examples_0"
            ],
            "cwd": "${workspaceFolder}/scripts"
        },
        {
            "name": "write_out 5 test.py",
            "type": "python",
            "request": "launch",
            "program": "write_out copy.py",
            "console": "integratedTerminal",
            "justMyCode": false,
            "args": [
                "--tasks",
                "all_tasks",
                "--num_fewshot",
                "5",
                "--num_examples",
                "10",
                "--output_base_path",
                "../input_examples_test",
                "--sets",
                "test"
            ],
            "cwd": "${workspaceFolder}/scripts"
        },
        {
            "name": "write_out 5 train.py",
            "type": "python",
            "request": "launch",
            "program": "write_out copy.py",
            "console": "integratedTerminal",
            "justMyCode": false,
            "args": [
                "--tasks",
                "all_tasks",
                "--num_fewshot",
                "5",
                "--num_examples",
                "10",
                "--output_base_path",
                "../input_examples_train",
                "--sets",
                "train"
            ],
            "cwd": "${workspaceFolder}/scripts"
        },
        {
            "name": "hellaswag",
            "type": "python",
            "request": "launch",
            "program": "main.py",
            "console": "integratedTerminal",
            "justMyCode": false,
            "args": [
                "--model",
                "gpt2",
                "--model_args", "pretrained=EleutherAI/gpt-neo-1.3B",
                "--tasks",
                "hellaswag",
                "--num_fewshot",
                "0",
                "--limit",
                "10",
                "--no_cache",
                "--device", "7"
            ],
            "cwd": "${workspaceFolder}"
        },
        {
            "name": "hellaswag_d",
            "type": "python",
            "request": "launch",
            "program": "main.py",
            "console": "integratedTerminal",
            "justMyCode": false,
            "args": [
                "--model", "dist_sim",
                "--model_args", "WORD_AGG_SCHEME=mean,EXAMPLE_AGG_SCHEME=None,SEGMENT_AGG_SCHEME=None,NORM=layer,SIMILARITY_FUNC=dot_product,pretrained=EleutherAI/gpt-neo-1.3B,ENCODING_LAYER=middle",
                "--tasks",
                "hellaswag_d",
                "--num_fewshot",
                "5",
                "--device", "7",
                "--task_args",
                "encoding_scheme=concat_all_examples",
                "--limit",
                "10",
                "--no_cache"
            ],
            "cwd": "${workspaceFolder}",
            // "env": {
            //     "CUDA_LAUNCH_BLOCKING": "1"
            // }
        },
        {
            "name": "hellaswag_d_t5",
            "type": "python",
            "request": "launch",
            "program": "main.py",
            "console": "integratedTerminal",
            "justMyCode": false,
            "args": [
                "--model", "dist_sim",
                "--model_args", "WORD_AGG_SCHEME=mean,EXAMPLE_AGG_SCHEME=None,SEGMENT_AGG_SCHEME=None,NORM=layer,SIMILARITY_FUNC=dot_product,pretrained=google/flan-t5-xl,PARALLELIZE=True",
                "--tasks",
                "hellaswag_d",
                "--num_fewshot",
                "0",
                "--device", "cpu",
                "--task_args",
                "encoding_scheme=sentence_level_segmentation",
                "--limit",
                "100",
                "--no_cache"
            ],
            "cwd": "${workspaceFolder}",
            // "env": {
            //     "CUDA_LAUNCH_BLOCKING": "1"
            // }
        },
        {
            "name": "hellaswag_d_bloomz3b",
            "type": "python",
            "request": "launch",
            "program": "main.py",
            "console": "integratedTerminal",
            "justMyCode": false,
            "args": [
                "--model", "dist_sim",
                "--model_args", "WORD_AGG_SCHEME=mean,EXAMPLE_AGG_SCHEME=None,SEGMENT_AGG_SCHEME=None,NORM=layer,SIMILARITY_FUNC=dot_product,pretrained=bigscience/bloomz-3b,PARALLELIZE=True",
                "--tasks",
                "hellaswag_d",
                "--num_fewshot",
                "0",
                "--device", "cpu",
                "--task_args",
                "encoding_scheme=sentence_level_segmentation",
                "--limit",
                "100",
                "--no_cache"
            ],
            "cwd": "${workspaceFolder}",
            // "env": {
            //     "CUDA_LAUNCH_BLOCKING": "1"
            // }
        },
        {
            "name": "hellaswag_dg",
            "type": "python",
            "request": "launch",
            "program": "main.py",
            "console": "integratedTerminal",
            "justMyCode": false,
            "args": [
                "--model",
                "dist_gen",
                "--model_args", "WORD_AGG_SCHEME=last,NORM=layer,pretrained=EleutherAI/gpt-neo-1.3B",
                "--tasks",
                "hellaswag_dg",
                "--num_fewshot",
                "0",
                "--device",
                "cpu",
                "--task_args",
                "encoding_scheme=cross_encoding",
                // "--limit",
                // "10",
                "--no_cache"
            ],
            "cwd": "${workspaceFolder}",
            // "env": {
            //     "CUDA_LAUNCH_BLOCKING": "1"
            // }
        },
        {
            "name": "hellaswag_dg_t5",
            "type": "python",
            "request": "launch",
            "program": "main.py",
            "console": "integratedTerminal",
            "justMyCode": false,
            "args": [
                "--model",
                "dist_gen",
                // "--model_args", "WORD_AGG_SCHEME=None,NORM=None,pretrained=google/flan-t5-xl,PARALLELIZE=True",
                // "--model_args", "WORD_AGG_SCHEME=None,NORM=None,pretrained=bigscience/T0_3B,PARALLELIZE=True",
                "--model_args", "WORD_AGG_SCHEME=concat,NORM=None,pretrained=google/flan-t5-xl,PARALLELIZE=True",
                "--tasks",
                "hellaswag_dg",
                "--num_fewshot",
                "0",
                "--device",
                "cpu",
                "--task_args",
                "encoding_scheme=sentence_level_segmentation",
                "--limit",
                "10",
                "--no_cache"
            ],
            "cwd": "${workspaceFolder}",
            "env": {"LOGLEVEL": "DEBUG"}
        },
        {
            "name": "webqs",
            "type": "python",
            "request": "launch",
            "program": "main.py",
            "console": "integratedTerminal",
            "justMyCode": false,
            "args": [
                "--model",
                "gpt2",
                "--model_args",
                "pretrained=EleutherAI/gpt-neo-1.3B",
                "--tasks",
                "webqs",
                "--num_fewshot",
                "5",
                "--limit",
                "332:333",
                "--no_cache",
                "--device",
                "7"
            ],
            "cwd": "${workspaceFolder}"
        },
        {
            "name": "webqs_dg",
            "type": "python",
            "request": "launch",
            "program": "main.py",
            "console": "integratedTerminal",
            "justMyCode": false,
            "args": [
                "--model",
                "dist_gen",
                "--tasks",
                "webqs_dg",
                "--num_fewshot",
                "5",
                "--device",
                "7",
                "--task_args",
                "encoding_scheme=cross_encoding",
                "--limit", "332:333",
                "--model_args",
                "pretrained=EleutherAI/gpt-neo-1.3B,WORD_AGG_SCHEME=last,NORM=layer",
                "--no_cache"
            ],
            "cwd": "${workspaceFolder}",
            // "env": {"CUDA_LAUNCH_BLOCKING":"1"}
        },
        {
            "name": "webqs_d",
            "type": "python",
            "request": "launch",
            "program": "main.py",
            "console": "integratedTerminal",
            "justMyCode": false,
            "args": [
                "--model",
                "dist_sim",
                "--model_args", "WORD_AGG_SCHEME=last,EXAMPLE_AGG_SCHEME=mean,SEGMENT_AGG_SCHEME=mean,NORM=layer,SIMILARITY_FUNC=dot_product",
                "--tasks",
                "webqs_d",
                "--num_fewshot",
                "5",
                "--device",
                "7",
                "--task_args",
                "encoding_scheme=merge_all_segments",
                "--limit", "5",
                "--no_cache"
            ],
            "cwd": "${workspaceFolder}",
            // "env": {"CUDA_LAUNCH_BLOCKING":"1"}
        },
        {
            "name": "wsc273",
            "type": "python",
            "request": "launch",
            "program": "main.py",
            "console": "integratedTerminal",
            "justMyCode": false,
            "args": [
                "--model",
                "gpt2",
                "--model_args", "pretrained=EleutherAI/gpt-neo-1.3B",
                "--tasks",
                "wsc273",
                "--num_fewshot",
                "0",
                "--limit",
                "10",
                "--no_cache",
                "--device", "7"
            ],
            "cwd": "${workspaceFolder}"
        },
        {
            "name": "scratch",
            "type": "python",
            "request": "launch",
            "program": "scratch.py",
            "console": "integratedTerminal",
            "justMyCode": false,
            "cwd": "${workspaceFolder}"
        }
    ]
}